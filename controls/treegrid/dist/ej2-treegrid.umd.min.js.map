{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/base/constant.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/actions/sort.js","../src/treegrid/base/data.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var i;\n    var j;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    if (action === 'add') {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && (control.editSettings.mode !== 'Cell'\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex + 1];\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex];\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && action === 'add' && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            else {\n                if (!isNullOrUndefined(child)) {\n                    record.childRecords.push(child);\n                }\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (isSelfReference) {\n                if (!record.hasOwnProperty(control.childMapping)) {\n                    record[control.childMapping] = [];\n                }\n                if (record[control.childMapping].indexOf(childRecords) === -1) {\n                    record[control.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex],\n            column: control.grid.getColumns()[control.treeColumnIndex]\n        });\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderTable().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            this.headerSelection();\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = checkWrap.querySelector('.e-label');\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            container.cell.appendChild(checkWrap);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            var data = getParentData(this.parent, record.uniqueID);\n            for (var j = 0; j < keys.length; j++) {\n                if (data.hasOwnProperty(keys[j])) {\n                    data[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                if (childRecords[i].checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (childRecords[i].checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderTable().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            checkbox = tr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        currentRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(currentRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(currentRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (this.parent.filterModule.filteredResult.length > 0) ? this.parent.getCurrentViewRecords() :\n                    this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (!(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : []);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor') && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor') && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = this.parent.dataSource[adaptorName] === 'BlazorAdaptor' || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var gridRows = this.parent.getRows();\n        var adaptorName = 'adaptorName';\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            var _loop_1 = function (i) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if ((isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') || !this_1.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    if (!isNullOrUndefined(targetEle)) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRecord_1 = this_1.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    var childRows = gridRows.filter(function (r) {\n                        return r.classList.contains('e-gridrowindex' + childRecord_1.index + 'level' + (childRecord_1.level + 1));\n                    });\n                    if (childRows.length) {\n                        this_1.collectExpandingRecs({ record: childRecord_1, rows: childRows, parentRow: rowDetails.parentRow });\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this_1.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                _loop_1(i);\n            }\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                        result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType.toString();\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (action === 'add') {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                if ((requestType === 'delete' || requestType === 'save')) {\n                    this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n                }\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            this.parent.sortModule = new Sort(this.parent);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager) {\n            if (this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.json) {\n                treeGridDataSource = this.parent.dataSource.dataSource.json;\n            }\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            this.dropRows(args, isByMethod);\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (!this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (proxy.dataSource instanceof DataManager) {\n            if (proxy.dataSource.dataSource.offline && proxy.dataSource.dataSource.json) {\n                tempDataSource = proxy.dataSource.dataSource.json;\n            }\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowHeight = row[0].offsetHeight;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().scrollTop;\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else if (scrollTop !== 0) {\n            roundOff = rowHeight - scrollTop % rowHeight;\n            rowTop = (index * rowHeight) + contentHeight + roundOff;\n        }\n        else {\n            rowTop = (index * rowHeight) + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    this.dropRows(args);\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n            var srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid') {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.parent.dataSource.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.parent.dataSource.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = tObj.grid.dataSource[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.parent.dataSource.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.parent.dataSource.splice(recordIndex1, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager) {\n            this.treeGridData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                tObj.dataSource.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource = tObj.dataSource;\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                if (idx !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idx, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = tObj.dataSource;\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            if (idx !== -1) {\n                tObj.dataSource.splice(idx, 1);\n                this.treeGridData.splice(idx, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragandDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { RowDD } from '../actions/rowdragdrop';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        TreeGrid_1.Inject(TreeGridSelection);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'RowDD',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        /**\n         * @hidden\n         */\n        this.rowDragAndDropModule = new RowDD(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        this.convertTreeData(this.dataSource);\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n        this.renderComplete();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.enablePersistence = this.enablePersistence;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor()) {\n                var data = 'data';\n                var rowIndex = 'rowIndex';\n                var row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor()) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor()) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete') {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'delete') {\n                    var data = 'data';\n                    actionArgs[data] = _this.getSelectedRecords();\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit') {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        this.grid.dataSource = this.flatData;\n                    }\n                    else {\n                        this.bindedDataSource();\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        this.editModule.addRecord(data, index, position);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        this.editModule.editCell(rowIndex, field);\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel \n        this.setProperties({ columns: this.columnModel }, true);\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                var detailrows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                    var args_1 = { row: row, data: record };\n                    if (rows.length > 0) {\n                        this.trigger(events.expanded, args_1);\n                    }\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = this.getCurrentViewRecords().filter(function (e) {\n                    return e.parentUniqueID === record.uniqueID;\n                });\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                var detailrows = gridRows.filter(function (detailRowes) {\n                    return detailRowes.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    this.notify('childRowExpand', { row: rows[i] });\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n                this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction });\n            }\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource) {\n            this.parent.dataModule.convertToFlatData(property.dataSource);\n            dtSrc = this.parent.flatData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource) {\n            this.parent.dataModule.convertToFlatData(prop.dataSource);\n            dtSrc = this.parent.flatData;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level >\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n            }\n            else {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level ===\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level === 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level !== 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n            }\n        }\n        if (args.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    setValue('parentUniqueID', summaryParent.uniqueID, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(TreeGridMenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        this.parent.grid.notify('collectTreeGrid', { tree: this.parent });\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if (this.parent.editSettings.mode === 'Cell' && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\nvar TreeGridMenu = /** @class */ (function (_super) {\n    __extends(TreeGridMenu, _super);\n    function TreeGridMenu() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TreeGridMenu.prototype.addEventListener = function () {\n        getValue('parent', this).on('collectTreeGrid', this.collectTreeGrid, this);\n        _super.prototype.addEventListener.call(this);\n    };\n    TreeGridMenu.prototype.collectTreeGrid = function (args) {\n        this.treegrid = args.tree;\n    };\n    TreeGridMenu.prototype.contextMenuItemClick = function (args) {\n        var item = getValue('getKeyFromId', this).apply(this, [args.item.id]);\n        var isPrevent = false;\n        switch (item) {\n            case 'PdfExport':\n                this.treegrid.pdfExport();\n                isPrevent = true;\n                break;\n            case 'ExcelExport':\n                this.treegrid.excelExport();\n                isPrevent = true;\n                break;\n            case 'CsvExport':\n                this.treegrid.csvExport();\n                isPrevent = true;\n                break;\n            case 'Save':\n                if (this.treegrid.editSettings.mode === 'Cell' && this.treegrid.grid.editSettings.mode === 'Batch') {\n                    isPrevent = true;\n                    this.treegrid.grid.editModule.saveCell();\n                }\n        }\n        if (!isPrevent) {\n            _super.prototype.contextMenuItemClick.call(this, args);\n        }\n        else {\n            args.column = getValue('targetColumn', this);\n            args.rowInfo = getValue('targetRowdata', this);\n            getValue('parent', this).trigger('contextMenuClick', args);\n        }\n    };\n    return TreeGridMenu;\n}(cmenu));\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getDataRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].parentItem = this.internalProperties.parentItem;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            for (var l = 0; l < row.classList.length; l++) {\n                var value = row.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([row], value);\n                }\n                if (results != null) {\n                    removeClass([row], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([row], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([row], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded) &&\n                records[index][this.parent.childMapping] && records[index][this.parent.childMapping].length) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save')) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var gridClas = [].slice.call(args.detailElement.parentElement.previousSibling.classList).filter(function (gridclass) { return (gridclass !== 'e-row' && gridclass !== 'e-altrow'); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if (((downScroll && (scrollArgs.offset.top +\n            (outBuffer * this.parent.getRowHeight())) < (this.parent.getRowHeight() * this.totalRecords))\n            || (upScroll))) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: 'refresh' });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        parentGrid.setProperties({ pageSettings: { pageSize: blockSize + 10 } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","action","key","grid","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","getCurrentViewRecords","addAct","currentViewRecords","extend","editSettings","newRowPosition","unshift","addAction","Array","k","taskData","_loop_1","hasOwnProperty","mode","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","columns","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","column","getColumns","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","TextWrapSettings","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","collapsing","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellEdit","batchCancel","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","classList","contains","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","trigger","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderTable","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","appendChild","rowIndexes","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","checkAll","currentRecord","recordIndex","getRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","requestType","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","columnMenuModule","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","Sort","GridSort","taskIds","flatSortedData","storedIndex","updateModel","createdSortedRecords","sortParams","srtQry","iterateSort","filterSettings","searchSettings","childSort","executeLocal","sortColumn","direction","isMultiSort","removeSortColumn","setProperties","getActualProperties","clearSorting","DataManipulation","parentItems","hierarchyData","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","select","isCountRequired","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","group","groupData","items","selfReferenceUpdate","createRecords","shift","adaptorName","loadChildOnDemand","Math","ceil","random","rowDetails","gridRows","parentRow","rows","isBlazor","this_1","targetEle","getElementsByClassName","childRecord_1","getRowObjectFromUID","childRows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","element","currentViewData","inx","haveChild","getUid","id","events.actionComplete","totalRecordsCount","events.expanded","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","toString","isLocalData","events.crudAction","results","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","filteredData","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","compFun","sortComparer","bind","sortBy","sortArgs","temp","paging","printMode","enableVirtualization","events.pagingActions","dataResult","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","treeGridDataSource","offline","events.rowdraging","Rowdraging","events.rowDropped","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","reorderRows","fromIndexes","toIndex","position","dropPosition","dropIndex","dropRows","refresh","draggedRecord","dragRecords","draggedRecord_1","tObj","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","remove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","undefined","addErrorElem","rowHeight","offsetHeight","rowTop","roundOff","toolHeight","toolbar","document","getElementById","positionOffSet","getOffset","contentHeight","getHeaderContent","top","scrollTop","getContent","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","slice","call","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","toolbarModule","getToolbar","multiplegrid","rowDropSettings","targetID","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","firstElementChild","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","rowDragAndDropModule","dropElement","ej2_instances","cancel","dragDropGrid","targetIndex","isNaN","getTargetIdx","srcControl","getSelectedRecords","indexes","selectedRecord","isByMethod","getSelectedRowIndexes","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_1","draggedRecords","rowDragMoudule","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","height","appendTo","renderComplete","bindGridProperties","bindedDataSource","enableRtl","enablePersistence","getGridColumns","columnQueryMode","pagerTemplate","enableAltRow","enableHover","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","bindGridEvents","treeGrid","rowSelecting","events.rowSelected","events.rowDeselected","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","actionFailure","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","extendedGridEvents","extendedGridEditEvents","bindCallBackEvents","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","promise","events.cellEdit","events.batchCancel","setTimeout","treeColumnRowTemplate","defaultQuery","dm_1","JsonAdaptor","events.recordDoubleClick","events.detailDataBound","events.actionBegin","updateTreeGridModel","events.beginAdd","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","val","touches","getPager","addRecord","editModule","deleteRecord","fieldName","startEdit","editCell","endEdit","deleteRow","tr","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","getContentTable","getDataRows","dRows","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","selectionModule","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","events.collapsing","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","events.localPagedExpandCollapse","displayAction","detailrows","args_1","collapseRemoteChild","detailRowes","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","collapsingTd","collapse","expandElement","cRow","eRows","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getSelectedRowCellIndexes","baseModule","treeModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","event.beforeExcelExport","manipulateExportProperties","book","dtSrc","queryResult","indent","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","manipulatePdfProperties","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","enableItems","saveCell","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","summaryformat","ContextMenu","TreeGridMenu","tree","addRow","editRecord","collectTreeGrid","treegrid","contextMenuItemClick","isPrevent","cmenu","Edit","GridEdit","previousNewRowPosition","internalProperties","events.keyPressed","contentready","events.doubleTap","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","applyFormValidation","doubleClickTarget","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","prom","celleditArgs","enableToolbarItems","request","toolbarID","cellDetails","selectRowIndex","rowIndex_1","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","data2","l","match","focussedElement","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","gridClas","detailElement","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","contentModule","focusModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","totalRecords","setVirtualHeight","getRowHeight","renderTable","debounceEvent","TreeInterSectionObserver","contents","getPanel","info","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","blockSize","GridVirtualScroll"],"mappings":"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"}