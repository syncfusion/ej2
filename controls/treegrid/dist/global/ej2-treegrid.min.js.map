{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/selection.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/actions/sort.js","../../src/treegrid/base/data.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var i;\n    var j;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    if (action === 'add') {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && (control.editSettings.mode !== 'Cell'\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex + 1];\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex];\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && action === 'add' && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            else {\n                if (!isNullOrUndefined(child)) {\n                    record.childRecords.push(child);\n                }\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (isSelfReference) {\n                if (!record.hasOwnProperty(control.childMapping)) {\n                    record[control.childMapping] = [];\n                }\n                if (record[control.childMapping].indexOf(childRecords) === -1) {\n                    record[control.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex],\n            column: control.grid.getColumns()[control.treeColumnIndex]\n        });\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderTable().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            this.headerSelection();\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = checkWrap.querySelector('.e-label');\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            container.cell.appendChild(checkWrap);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            var data = getParentData(this.parent, record.uniqueID);\n            for (var j = 0; j < keys.length; j++) {\n                if (data.hasOwnProperty(keys[j])) {\n                    data[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                if (childRecords[i].checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (childRecords[i].checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderTable().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            checkbox = tr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        currentRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(currentRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(currentRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (this.parent.filterModule.filteredResult.length > 0) ? this.parent.getCurrentViewRecords() :\n                    this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (!(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : []);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor') && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor') && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = this.parent.dataSource[adaptorName] === 'BlazorAdaptor' || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var gridRows = this.parent.getRows();\n        var adaptorName = 'adaptorName';\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            var _loop_1 = function (i) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if ((isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') || !this_1.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    if (!isNullOrUndefined(targetEle)) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRecord_1 = this_1.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    var childRows = gridRows.filter(function (r) {\n                        return r.classList.contains('e-gridrowindex' + childRecord_1.index + 'level' + (childRecord_1.level + 1));\n                    });\n                    if (childRows.length) {\n                        this_1.collectExpandingRecs({ record: childRecord_1, rows: childRows, parentRow: rowDetails.parentRow });\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this_1.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                _loop_1(i);\n            }\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                        result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType.toString();\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (action === 'add') {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                if ((requestType === 'delete' || requestType === 'save')) {\n                    this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n                }\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            this.parent.sortModule = new Sort(this.parent);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager) {\n            if (this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.json) {\n                treeGridDataSource = this.parent.dataSource.dataSource.json;\n            }\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            this.dropRows(args, isByMethod);\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (!this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (proxy.dataSource instanceof DataManager) {\n            if (proxy.dataSource.dataSource.offline && proxy.dataSource.dataSource.json) {\n                tempDataSource = proxy.dataSource.dataSource.json;\n            }\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowHeight = row[0].offsetHeight;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().scrollTop;\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else if (scrollTop !== 0) {\n            roundOff = rowHeight - scrollTop % rowHeight;\n            rowTop = (index * rowHeight) + contentHeight + roundOff;\n        }\n        else {\n            rowTop = (index * rowHeight) + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    this.dropRows(args);\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n            var srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid') {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.parent.dataSource.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.parent.dataSource.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = tObj.grid.dataSource[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.parent.dataSource.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.parent.dataSource.splice(recordIndex1, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager) {\n            this.treeGridData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                tObj.dataSource.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource = tObj.dataSource;\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                if (idx !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idx, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = tObj.dataSource;\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            if (idx !== -1) {\n                tObj.dataSource.splice(idx, 1);\n                this.treeGridData.splice(idx, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragandDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { RowDD } from '../actions/rowdragdrop';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        TreeGrid_1.Inject(TreeGridSelection);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'RowDD',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        /**\n         * @hidden\n         */\n        this.rowDragAndDropModule = new RowDD(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        this.convertTreeData(this.dataSource);\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n        this.renderComplete();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.enablePersistence = this.enablePersistence;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor()) {\n                var data = 'data';\n                var rowIndex = 'rowIndex';\n                var row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor()) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor()) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete') {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'delete') {\n                    var data = 'data';\n                    actionArgs[data] = _this.getSelectedRecords();\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit') {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        this.grid.dataSource = this.flatData;\n                    }\n                    else {\n                        this.bindedDataSource();\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        this.editModule.addRecord(data, index, position);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        this.editModule.editCell(rowIndex, field);\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel \n        this.setProperties({ columns: this.columnModel }, true);\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                var detailrows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                    var args_1 = { row: row, data: record };\n                    if (rows.length > 0) {\n                        this.trigger(events.expanded, args_1);\n                    }\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = this.getCurrentViewRecords().filter(function (e) {\n                    return e.parentUniqueID === record.uniqueID;\n                });\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                var detailrows = gridRows.filter(function (detailRowes) {\n                    return detailRowes.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    this.notify('childRowExpand', { row: rows[i] });\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n                this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction });\n            }\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource) {\n            this.parent.dataModule.convertToFlatData(property.dataSource);\n            dtSrc = this.parent.flatData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource) {\n            this.parent.dataModule.convertToFlatData(prop.dataSource);\n            dtSrc = this.parent.flatData;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level >\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n            }\n            else {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level ===\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level === 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level !== 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n            }\n        }\n        if (args.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    setValue('parentUniqueID', summaryParent.uniqueID, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(TreeGridMenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        this.parent.grid.notify('collectTreeGrid', { tree: this.parent });\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if (this.parent.editSettings.mode === 'Cell' && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\nvar TreeGridMenu = /** @class */ (function (_super) {\n    __extends(TreeGridMenu, _super);\n    function TreeGridMenu() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TreeGridMenu.prototype.addEventListener = function () {\n        getValue('parent', this).on('collectTreeGrid', this.collectTreeGrid, this);\n        _super.prototype.addEventListener.call(this);\n    };\n    TreeGridMenu.prototype.collectTreeGrid = function (args) {\n        this.treegrid = args.tree;\n    };\n    TreeGridMenu.prototype.contextMenuItemClick = function (args) {\n        var item = getValue('getKeyFromId', this).apply(this, [args.item.id]);\n        var isPrevent = false;\n        switch (item) {\n            case 'PdfExport':\n                this.treegrid.pdfExport();\n                isPrevent = true;\n                break;\n            case 'ExcelExport':\n                this.treegrid.excelExport();\n                isPrevent = true;\n                break;\n            case 'CsvExport':\n                this.treegrid.csvExport();\n                isPrevent = true;\n                break;\n            case 'Save':\n                if (this.treegrid.editSettings.mode === 'Cell' && this.treegrid.grid.editSettings.mode === 'Batch') {\n                    isPrevent = true;\n                    this.treegrid.grid.editModule.saveCell();\n                }\n        }\n        if (!isPrevent) {\n            _super.prototype.contextMenuItemClick.call(this, args);\n        }\n        else {\n            args.column = getValue('targetColumn', this);\n            args.rowInfo = getValue('targetRowdata', this);\n            getValue('parent', this).trigger('contextMenuClick', args);\n        }\n    };\n    return TreeGridMenu;\n}(cmenu));\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getDataRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].parentItem = this.internalProperties.parentItem;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            for (var l = 0; l < row.classList.length; l++) {\n                var value = row.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([row], value);\n                }\n                if (results != null) {\n                    removeClass([row], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([row], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([row], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded) &&\n                records[index][this.parent.childMapping] && records[index][this.parent.childMapping].length) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save')) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var gridClas = [].slice.call(args.detailElement.parentElement.previousSibling.classList).filter(function (gridclass) { return (gridclass !== 'e-row' && gridclass !== 'e-altrow'); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if (((downScroll && (scrollArgs.offset.top +\n            (outBuffer * this.parent.getRowHeight())) < (this.parent.getRowHeight() * this.totalRecords))\n            || (upScroll))) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: 'refresh' });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        parentGrid.setProperties({ pageSettings: { pageSize: blockSize + 10 } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","action","key","grid","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","getCurrentViewRecords","addAct","addAction","Array","extend","editSettings","newRowPosition","k","taskData","hasOwnProperty","mode","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","unshift","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","columns","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","column","getColumns","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","TextWrapSettings","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","classList","contains","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","trigger","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderTable","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","appendChild","rowIndexes","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","checkAll","currentRecord","recordIndex","getRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","requestType","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","columnMenuModule","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","collapsed","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","Sort","GridSort","taskIds","flatSortedData","storedIndex","updateModel","createdSortedRecords","sortParams","srtQry","iterateSort","filterSettings","searchSettings","childSort","executeLocal","sortColumn","direction","isMultiSort","removeSortColumn","setProperties","getActualProperties","clearSorting","DataManipulation","parentItems","hierarchyData","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","select","isCountRequired","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","group","groupData","items","selfReferenceUpdate","createRecords","shift","loadChildOnDemand","Math","ceil","random","rowDetails","gridRows","parentRow","rows","this_1","isBlazor","targetEle","getElementsByClassName","childRecord_1","getRowObjectFromUID","childRows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","element","currentViewData","inx","haveChild","getUid","id","totalRecordsCount","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","toString","isLocalData","results","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","filteredData","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","compFun","sortComparer","bind","sortBy","sortArgs","temp","paging","printMode","enableVirtualization","dataResult","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","treeGridDataSource","offline","Rowdraging","rowDropped","rowsAdded","rowsRemoved","reorderRows","fromIndexes","toIndex","position","dropPosition","dropIndex","dropRows","refresh","draggedRecord","dragRecords","draggedRecord_1","tObj","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","remove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","undefined","addErrorElem","rowHeight","offsetHeight","rowTop","roundOff","toolHeight","toolbar","document","getElementById","positionOffSet","getOffset","contentHeight","getHeaderContent","top","scrollTop","getContent","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","slice","call","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","toolbarModule","getToolbar","multiplegrid","rowDropSettings","targetID","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","firstElementChild","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","rowDragAndDropModule","dropElement","ej2_instances","cancel","dragDropGrid","targetIndex","isNaN","getTargetIdx","srcControl","getSelectedRecords","indexes","selectedRecord","isByMethod","getSelectedRowIndexes","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_1","draggedRecords","rowDragMoudule","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","height","appendTo","renderComplete","bindGridProperties","bindedDataSource","enableRtl","enablePersistence","getGridColumns","columnQueryMode","pagerTemplate","enableAltRow","enableHover","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","bindGridEvents","treeGrid","rowSelecting","rowSelected","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","cellEdit","actionFailure","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","extendedGridEvents","extendedGridEditEvents","bindCallBackEvents","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","promise","batchCancel","setTimeout","treeColumnRowTemplate","defaultQuery","dm_1","JsonAdaptor","detailDataBound","actionBegin","actionComplete","updateTreeGridModel","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","val","touches","getPager","addRecord","editModule","deleteRecord","fieldName","startEdit","editCell","endEdit","deleteRow","tr","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","getContentTable","getDataRows","dRows","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","selectionModule","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","displayAction","detailrows","args_1","collapseRemoteChild","detailRowes","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","collapsingTd","collapse","expandElement","cRow","eRows","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getSelectedRowCellIndexes","baseModule","treeModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","manipulateExportProperties","book","dtSrc","queryResult","indent","PdfExport","GridPdf","updatePdfResultModel","manipulatePdfProperties","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","enableItems","saveCell","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","summaryformat","ContextMenu","TreeGridMenu","tree","addRow","editRecord","collectTreeGrid","treegrid","contextMenuItemClick","isPrevent","cmenu","Edit","GridEdit","previousNewRowPosition","internalProperties","crudAction","beginAdd","keyPressed","contentready","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","applyFormValidation","doubleClickTarget","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","prom","celleditArgs","enableToolbarItems","request","toolbarID","cellDetails","selectRowIndex","rowIndex_1","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","data2","l","match","focussedElement","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","gridClas","detailElement","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","contentModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","virtualOtherAction","indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","totalRecords","setVirtualHeight","getRowHeight","renderTable","debounceEvent","TreeInterSectionObserver","contents","getPanel","info","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","blockSize","GridVirtualScroll","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD"],"mappings":"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,UAAW,cAAW,IAClCE,GACIgB,WAAS,OACVge,EAASlf,UAAW,mBAAgB,IACvCE,GACIgB,WAAS,OACVge,EAASlf,UAAW,sBAAmB,IAC1CE,GACIgB,WAAS,IACVge,EAASlf,UAAW,sBAAmB,IAC1CE,GACIgB,WAAS,OACVge,EAASlf,UAAW,gBAAa,IACpCE,GACIgB,WAAS,OACVge,EAASlf,UAAW,sBAAmB,IAC1CE,GACIgB,YAAS,IACVge,EAASlf,UAAW,wBAAqB,IAC5CE,GACIgB,WAAS,OACVge,EAASlf,UAAW,yBAAsB,IAC7CE,GACIgB,YAAS,IACVge,EAASlf,UAAW,0BAAuB,IAC9CE,GACIgB,gBACDge,EAASlf,UAAW,iBAAc,IACrCE,GACIgB,cACDge,EAASlf,UAAW,YAAS,IAChCE,GACIgB,cACDge,EAASlf,UAAW,iBAAc,IACrCE,GACIgB,WAAS,aACVge,EAASlf,UAAW,gBAAa,IACpCE,GACIgB,YAAS,IACVge,EAASlf,UAAW,kBAAe,IACtCE,GACIgB,YAAS,IACVge,EAASlf,UAAW,wBAAqB,IAC5CE,GACIgB,YAAS,IACVge,EAASlf,UAAW,oBAAiB,IACxCE,GACI6zB,aAAY3yB,IACb8d,EAASlf,UAAW,uBAAoB,IAC3CE,GACIgB,YAAS,IACVge,EAASlf,UAAW,sBAAmB,IAC1CE,GACIgB,YAAS,IACVge,EAASlf,UAAW,oBAAiB,IACxCE,GACIgB,YAAS,IACVge,EAASlf,UAAW,yBAAsB,IAC7CE,GACI6zB,aAAY1W,IACb6B,EAASlf,UAAW,mBAAgB,IACvCE,GACI6zB,aAAYC,oBACb9U,EAASlf,UAAW,sBAAmB,IAC1CE,GACIgB,cACDge,EAASlf,UAAW,oBAAiB,IACxCE,GACIgB,YAAS,IACVge,EAASlf,UAAW,qBAAkB,IACzCE,GACIgB,YAAS,IACVge,EAASlf,UAAW,mBAAgB,IACvCE,GACIgB,YAAS,IACVge,EAASlf,UAAW,wBAAqB,IAC5CE,GACI6zB,aAAY9U,IACbC,EAASlf,UAAW,mBAAgB,IACvCE,GACIc,gBAAe8d,IAChBI,EAASlf,UAAW,iBAAc,IACrCE,GACI6zB,aAAYhV,IACbG,EAASlf,UAAW,mBAAgB,IACvCE,GACIgB,YAAS,IACVge,EAASlf,UAAW,qBAAkB,IACzCE,GACIgB,cACDge,EAASlf,UAAW,qBAAkB,IACzCE,GACI6zB,aAAYlzB,IACbqe,EAASlf,UAAW,qBAAkB,IACzCE,GACI6zB,aAAY3rB,IACb8W,EAASlf,UAAW,qBAAkB,IACzCE,GACIgB,cACDge,EAASlf,UAAW,cAAW,IAClCE,GACIgB,cACDge,EAASlf,UAAW,sBAAmB,IAC1CE,GACIgB,WAAS,YACVge,EAASlf,UAAW,gBAAa,IACpCE,GACIgB,cACDge,EAASlf,UAAW,uBAAoB,IAC3CE,GACIgB,cACDge,EAASlf,UAAW,sBAAmB,IAC1CE,GACIgB,cACDge,EAASlf,UAAW,kBAAe,IACtCE,GACIgB,WAAS,OACVge,EAASlf,UAAW,gBAAa,IACpCE,GACIgB,YAAS,IACVge,EAASlf,UAAW,mBAAgB,IACvCE,GACIgB,YAAS,IACVge,EAASlf,UAAW,oBAAiB,IACxCE,GACIgB,YAAS,IACVge,EAASlf,UAAW,kBAAe,IACtCE,GACIgB,WAAS,SACVge,EAASlf,UAAW,aAAU,IACjCE,GACIgB,WAAS,SACVge,EAASlf,UAAW,YAAS,IAChCE,GACIgB,YAAS,IACVge,EAASlf,UAAW,2BAAwB,IAC/CE,GACIgB,WAAS,QACVge,EAASlf,UAAW,sBAAmB,IAC1CE,GACI+zB,WACD/U,EAASlf,UAAW,cAAW,IAClCE,GACI+zB,WACD/U,EAASlf,UAAW,WAAQ,IAC/BE,GACI+zB,WACD/U,EAASlf,UAAW,gBAAa,IACpCE,GACI+zB,WACD/U,EAASlf,UAAW,eAAY,IACnCE,GACI+zB,WACD/U,EAASlf,UAAW,iBAAc,IACrCE,GACI+zB,WACD/U,EAASlf,UAAW,gBAAa,IACpCE,GACI+zB,WACD/U,EAASlf,UAAW,eAAY,IACnCE,GACI+zB,WACD/U,EAASlf,UAAW,kBAAe,IACtCE,GACI+zB,WACD/U,EAASlf,UAAW,qBAAkB,IACzCE,GACI+zB,WACD/U,EAASlf,UAAW,gBAAa,IACpCE,GACI+zB,WACD/U,EAASlf,UAAW,eAAY,IACnCE,GACI+zB,WACD/U,EAASlf,UAAW,oBAAiB,IACxCE,GACI+zB,WACD/U,EAASlf,UAAW,gBAAa,IACpCE,GACI+zB,WACD/U,EAASlf,UAAW,wBAAqB,IAC5CE,GACI+zB,WACD/U,EAASlf,UAAW,sBAAmB,IAC1CE,GACI+zB,WACD/U,EAASlf,UAAW,wBAAqB,IAC5CE,GACI+zB,WACD/U,EAASlf,UAAW,mBAAgB,IACvCE,GACI+zB,WACD/U,EAASlf,UAAW,sBAAmB,IAC1CE,GACI+zB,WACD/U,EAASlf,UAAW,oBAAiB,IACxCE,GACIgB,YAAS,IACVge,EAASlf,UAAW,qBAAkB,IACzCE,GACI+zB,WACD/U,EAASlf,UAAW,mBAAgB,IACvCE,GACI+zB,WACD/U,EAASlf,UAAW,kBAAe,IACtCE,GACI+zB,WACD/U,EAASlf,UAAW,qBAAkB,IACzCE,GACI+zB,WACD/U,EAASlf,UAAW,oBAAiB,IACxCE,GACI+zB,WACD/U,EAASlf,UAAW,qBAAkB,IACzCE,GACI+zB,WACD/U,EAASlf,UAAW,oBAAiB,IACxCE,GACI+zB,WACD/U,EAASlf,UAAW,qBAAkB,IACzCE,GACI+zB,WACD/U,EAASlf,UAAW,sBAAmB,IAC1CE,GACI+zB,WACD/U,EAASlf,UAAW,mBAAgB,IACvCE,GACI+zB,WACD/U,EAASlf,UAAW,sBAAmB,IAC1CE,GACI+zB,WACD/U,EAASlf,UAAW,qBAAkB,IACzCE,GACI+zB,WACD/U,EAASlf,UAAW,kBAAe,IACtCE,GACI+zB,WACD/U,EAASlf,UAAW,eAAY,IACnCE,GACI+zB,WACD/U,EAASlf,UAAW,iBAAc,IACrCE,GACI+zB,WACD/U,EAASlf,UAAW,sBAAmB,IAC1CE,GACI+zB,WACD/U,EAASlf,UAAW,iBAAc,IACrCE,GACI+zB,WACD/U,EAASlf,UAAW,iBAAc,IACrCE,GACI+zB,WACD/U,EAASlf,UAAW,qBAAkB,IACzCE,GACI+zB,WACD/U,E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"}