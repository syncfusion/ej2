{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && !this.paneSettings[index].collapsed) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n                addClass([separator], LAST_BAR);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.nextPane.style.flexGrow = '0';\n                if (_this.previousPane.classList.contains('e-collapsed') && _this.previousPane.style.flexGrow === '0') {\n                    _this.previousPane.style.flexGrow = '0';\n                }\n                else {\n                    _this.previousPane.style.flexGrow = '1';\n                }\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.previousElementSibling.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        var prevPane = this.getPrevPane(this.currentSeparator, this.order);\n        var nextPane = this.getNextPane(this.currentSeparator, this.order);\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            val = (val).trim();\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.isDynamicallyUpdated = false;\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.renderComplete();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel .e-panel-container .e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(document.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStop', args);\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.dragStartArgs = { event: args.event, element: args.element, cancel: false };\n        this.trigger('dragStart', this.dragStartArgs);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.element.innerHTML = '';\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        this.initialize();\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!this.isDynamicallyUpdated) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                        this.isDynamicallyUpdated = true;\n                    }\n                    else {\n                        this.isDynamicallyUpdated = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels && !this.isDynamicallyUpdated) {\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isDynamicallyUpdated = true;\n                    }\n                    else {\n                        this.isDynamicallyUpdated = false;\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","setAttribute","toLowerCase","wireClickEvents","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","querySelectorAll","wireResizeEvents","onMouseMove","window","bind","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","beforeCollapseArgs","collapseEventArgs","isBlazor","event","prevPaneIndex","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","isDynamicallyUpdated","availableClasses","setOldRowCol","calculateCellSize","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","dragStartArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","removeAttribute","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","keyEntity"],"mappings":"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"}