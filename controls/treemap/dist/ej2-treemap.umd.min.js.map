{"version":3,"file":"ej2-treemap.umd.min.js","sources":["../src/treemap/utils/helper.js","../src/treemap/model/theme.js","../src/treemap/model/constants.js","../src/treemap/model/base.js","../src/treemap/layout/render-panel.js","../src/treemap/utils/export.js","../src/treemap/treemap.js","../src/treemap/layout/legend.js","../src/treemap/user-interaction/highlight-selection.js","../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject;\n    htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n * @private\n */\n/* tslint:disable:no-string-literal */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var drillLevelText = void 0;\n        var spacing = 5;\n        drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 && !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    var elementLength = element.length;\n    while (elementLength > 0) {\n        childElement.appendChild(element[0]);\n        elementLength--;\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    document.getElementById(element.id).remove();\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * @private\n * To get the theme style based on treemap theme.\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n            color = '#303030';\n            break;\n        case 'fabricdark':\n            color = '#201F1F';\n            break;\n        case 'bootstrapdark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme.toLowerCase()) {\n        case 'bootstrapdark':\n        case 'fabricdark':\n        case 'materialdark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Specifies TreeMap load event name.\n * @private\n */\nexport var load = 'load';\n/**\n * Specifies TreeMap loaded event name.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Specifies TreeMap beforePrint event name.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Specifies the itemRendering event name.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Specifies the drilldown start event name.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Specifies the drilldown end event name.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Specifies the item selected event name.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Specifies the item highlight event name.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Specifies the tooltip rendering event name.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Specifies the item click event name.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Specifies the item move event name.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Specifies the mouse click event name.\n * @private\n */\nexport var click = 'click';\n/**\n * Specifies maps double click event name.\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Specifies maps right click event name.\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Specifies the mouse move event name.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Specifies legend item rendering event name.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Specifies legend rendering event name.\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Specifies treemap resize event name.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Specifies the font family\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the treemap margin.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To configure title of the maps.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Configures the legend settings.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Options for customizing the tree map levels.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (this.treemap.levelsOfData && this.treemap.levelsOfData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(this.treemap.levelsOfData[0], [])[0] : this.treemap.levelsOfData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                var x = this.treemap.drilledItems[count]['data'];\n                var y = new Object();\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || this.treemap.levelsOfData[0], totalRect);\n                this.renderLayoutItems(y || this.treemap.levelsOfData[0]);\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || this.treemap.levelsOfData[0], totalRect);\n                this.renderLayoutItems(data || this.treemap.levelsOfData[0]);\n            }\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        var parentItem = new Object();\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        var parentItemGroupname = new Object();\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems(parentItemGroupname);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var _this = this;\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        var connectorText;\n        var _loop_1 = function (i) {\n            item = this_1.renderItems[i];\n            index = item['groupIndex'];\n            if (this_1.treemap.drillDownView && isNullOrUndefined(this_1.treemap.currentLevel)\n                && index > 0 || this_1.treemap.drillDownView\n                && index > (this_1.treemap.currentLevel + 1)) {\n                return \"continue\";\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this_1.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this_1.treemap.totalRect ? convertToContainer(this_1.treemap.totalRect) : this_1.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this_1.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName = void 0;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this_1.treemap.currentLevel) {\n                if (this_1.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this_1.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this_1.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this_1.treemap) || levelName;\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this_1.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            textStyle.fontFamily = this_1.treemap.themeStyle.labelFontFamily || textStyle.fontFamily;\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this_1.treemap,\n                currentItem: item, RenderItems: this_1.renderItems, options: item['options']\n            };\n            this_1.treemap.trigger(itemRendering, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                        ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                    pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                    var path = _this.renderer.drawPath(pathOptions);\n                    itemGroup.appendChild(path);\n                    if (txtVisible) {\n                        _this.renderItemText(renderText.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                    }\n                    if (template) {\n                        templateEle = _this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item, isLeafItem);\n                        templateGroup.appendChild(templateEle);\n                    }\n                    itemGroup.setAttribute('aria-label', item['name']);\n                    itemGroup.setAttribute('tabindex', (_this.treemap.tabIndex + i + 2).toString());\n                    _this.layoutGroup.appendChild(itemGroup);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            _loop_1(i);\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n            updateBlazorTemplate(this.treemap.element.id + '_HeaderTemplate', 'HeaderTemplate', levels[levels.length - 1]);\n            updateBlazorTemplate(this.treemap.element.id + '_LabelTemplate', 'LabelTemplate', leaf);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(this.treemap.defaultLevelData)) {\n            if (this.treemap.defaultLevelData.length > 0) {\n                treemap.levelsOfData = this.treemap.defaultLevelData;\n            }\n        }\n        var parentData = findChildren(treemap.levelsOfData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : treemap.palette.length > 0 ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item, isLeafItem) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        var templateId = isLeafItem ? groupId + '_LabelTemplate' : groupId + '_HeaderTemplate';\n        var baseTemplateId = isLeafItem ? '_LabelTemplate' : '_HeaderTemplate';\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], null, null, this.treemap.element.id + baseTemplateId, false);\n        labelEle = convertElement(templateElement, templateId, item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the Maps\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData);\n        if (!argsData.cancel) {\n            printWindow(argsData.htmlContent, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax } from '@syncfusion/ej2-base';\nimport { Complex, Collection, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the TreeMap control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.defaultLevelData = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        var blazor = 'Blazor';\n        this.isBlazor = window[blazor];\n        this.trigger(load, { treemap: this });\n        this.initPrivateVariable();\n        this.unWireEVents();\n        this.createSvg();\n        this.wireEVents();\n        this.setCulture();\n    };\n    TreeMap.prototype.render = function () {\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(this.levelsOfData)) {\n            this.defaultLevelData = this.levelsOfData;\n        }\n        this.processDataManager();\n        this.renderComplete();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this.isBlazor ? null : this });\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        if (this.leafItemSettings.labelTemplate) {\n            resetBlazorTemplate(this.element.id + '_LabelTemplate', 'LabelTemplate');\n        }\n        for (var i = 0; i < this.levels.length; i++) {\n            if (this.levels[i].headerTemplate) {\n                resetBlazorTemplate(this.element.id + '_HeaderTemplate', 'HeaderTemplate');\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.remove();\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        title.textStyle.fontFamily = this.themeStyle.fontFamily || title.textStyle.fontFamily;\n        title.textStyle.size = this.themeStyle.fontSize || title.textStyle.size;\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            this.levelsOfData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                this.levelsOfData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    this.hierarchyData = [];\n                    this.hierarchyData = extend([], this.dataSource, this.hierarchyData, true);\n                    for (var i = 0; i < this.hierarchyData.length; i++) {\n                        this.processHierarchicalData(this.hierarchyData[i], i);\n                    }\n                    this.levelsOfData = this.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (this.levelsOfData.length > 1) {\n                        this.reOrderLevelData(this.levelsOfData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(this.levelsOfData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === this.hierarchyData.length - 1) {\n            var mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < this.hierarchyData.length; k++) {\n                childData = findChildren(this.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    this.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * Handles the print method for chart control.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            this.levelsOfData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        this.levelsOfData[this.levelsOfData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = this.levelsOfData[start][currentPath];\n        var previousData = this.levelsOfData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(this.levelsOfData[this.levelsOfData.length - 1][currentPath], 'Child');\n        this.levelsOfData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * To handle the window resize event on treemap.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this.isBlazor ? null : this\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args);\n                _this.render();\n            }, 500);\n        }\n    };\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var eventBlazorArgs;\n        var itemIndex;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        var clickBlazorArgs = { cancel: false, name: click, mouseEvent: e };\n        this.trigger(click, this.isBlazor ? clickBlazorArgs : clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name']\n            };\n            eventBlazorArgs = {\n                cancel: false, name: itemClick, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name']\n            };\n            this.trigger(itemClick, this.isBlazor ? eventBlazorArgs : eventArgs);\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        var doubleClickBlazorArgs = { cancel: false, name: doubleClick, mouseEvent: e };\n        this.trigger(doubleClick, this.isBlazor ? doubleClickBlazorArgs : doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        var rightClickBlazorArgs = { cancel: false, name: rightClick, mouseEvent: e };\n        this.trigger(rightClick, this.isBlazor ? rightClickBlazorArgs : rightClickArgs);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var eventBlazorArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        var moveBlazorArgs = { cancel: false, name: mouseMove, mouseEvent: e };\n        this.trigger(mouseMove, this.isBlazor ? moveBlazorArgs : moveArgs);\n        var childItems;\n        this.drillMouseMove = this.mouseDown;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            eventBlazorArgs = { cancel: false, name: itemMove, item: item, mouseEvent: e };\n            this.trigger(itemMove, this.isBlazor ? eventBlazorArgs : eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (labelText, drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        var drillLevelChild;\n        var newDrillItem = new Object();\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        var endBlazorEvent;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(labelText, drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this, item: newDrillItem, element: targetEle,\n                    groupIndex: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null\n                };\n                this.trigger(drillStart, startEvent, function (observedArgs) {\n                    _this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                        (!isNullOrUndefined(drillLevel) && _this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                    if (!observedArgs.cancel) {\n                        if (document.getElementById(layoutID)) {\n                            document.getElementById(layoutID).remove();\n                        }\n                        totalRect = extend({}, _this.areaRect, totalRect, true);\n                        if (_this.legendSettings.visible && !isNullOrUndefined(_this.treeMapLegendModule)) {\n                            if (!isNullOrUndefined(newDrillItem)) {\n                                _this.treeMapLegendModule.legendGroup.textContent = '';\n                                _this.treeMapLegendModule.legendGroup = null;\n                                _this.treeMapLegendModule.widthIncrement = 0;\n                                _this.treeMapLegendModule.heightIncrement = 0;\n                                if (_this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                    _this.drilledLegendItems = {\n                                        name: _this.drilledItems[_this.drilledItems.length - 1]['data']['levelOrderName'],\n                                        data: _this.drilledItems[_this.drilledItems.length - 1]['data']\n                                    };\n                                }\n                                else {\n                                    _this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                                }\n                                _this.treeMapLegendModule.renderLegend();\n                            }\n                            totalRect = !isNullOrUndefined(_this.totalRect) ? _this.totalRect : totalRect;\n                        }\n                        if (document.getElementById(templateID)) {\n                            document.getElementById(templateID).remove();\n                        }\n                        if (!isNullOrUndefined(observedArgs.childItems) && !observedArgs.cancel) {\n                            _this.layout.onDemandProcess(observedArgs.childItems);\n                        }\n                        else {\n                            _this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                            _this.layout.renderLayoutItems(newDrillItem);\n                        }\n                    }\n                });\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                endBlazorEvent = { cancel: false, name: drillEnd, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, this.isBlazor ? endBlazorEvent : endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                case 'layoutType':\n                case 'leafItemSettings':\n                case 'legendSettings':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Get component name\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * To destroy the treemap control.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n","import { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        var _this = this;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs;\n        eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        this.treemap.trigger(legendRendering, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel && observedArgs._changePosition !== _this.treemap.legendSettings.position) {\n                _this.treemap.legendSettings.position = observedArgs._changePosition;\n            }\n            _this.calculateLegendBounds();\n            if (_this.legendCollections.length > 0) {\n                _this.drawLegend();\n            }\n        });\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(treemap.levelsOfData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(this.treemap.levelsOfData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = treemap.themeStyle.fontFamily || titleTextStyle.fontFamily;\n            titleTextStyle.size = treemap.themeStyle.legendFontSize || titleTextStyle.size;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            legend.textStyle.size = treemap.themeStyle.legendFontSize || legend.textStyle.size;\n            legend.textStyle.fontFamily = treemap.themeStyle.fontFamily || legend.textStyle.fontFamily;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var _this = this;\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var legendRtlLocation;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape_1 = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor_1 = isLineShape_1 ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth_1 = isLineShape_1 ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            var _loop_1 = function (i) {\n                var collection = this_1.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this_1.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                this_1.treemap.trigger(legendItemRendering, eventArgs, function (observedArgs) {\n                    var renderOptions = new PathOption(shapeId, observedArgs.fill, strokeWidth_1, isLineShape_1 ? collection['Fill'] : strokeColor_1, legend.opacity, '');\n                    legendElement.appendChild(drawSymbol(shapeLocation, observedArgs.shape, shapeSize, observedArgs.imageUrl, renderOptions, legendText));\n                    textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                    renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || _this.treemap.themeStyle.legendTextColor, legendElement);\n                    _this.legendGroup.appendChild(legendElement);\n                });\n            };\n            var this_1 = this;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                _loop_1(i);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            document.getElementById(this.treemap.element.id + '_Interactive_Legend').remove();\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    /**\n     * Mouse down event in highlight\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var eventBlazorArgs;\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? selectionModule.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        eventBlazorArgs = { cancel: false, name: itemHighlight, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var eventBlazorArgs;\n        var treemap = this.treemap;\n        var items = [];\n        var targetId = targetEle.id;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements };\n                    eventBlazorArgs = { cancel: false, name: itemSelected, items: items, elements: selectionElements };\n                    treemap.trigger(itemSelected, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined, updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.fontFamily = this.treemap.themeStyle.fontFamily;\n                this.tooltipSettings.textStyle.color = this.treemap.themeStyle.tooltipFontColor\n                    || this.tooltipSettings.textStyle.color;\n                this.tooltipSettings.textStyle.opacity = this.treemap.themeStyle.tooltipTextOpacity\n                    || this.tooltipSettings.textStyle.opacity;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                this.treemap.trigger(tooltipRendering, tootipArgs, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        _this.svgTooltip = new Tooltip({\n                            enable: true,\n                            header: '',\n                            data: observedArgs.options['data'],\n                            template: observedArgs.options['template'],\n                            content: observedArgs.options['text'],\n                            shapes: [],\n                            location: observedArgs.options['location'],\n                            palette: [markerFill],\n                            areaBounds: _this.treemap.areaRect,\n                            textStyle: observedArgs.options['textStyle']\n                        });\n                        _this.svgTooltip.opacity = _this.treemap.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                        _this.svgTooltip.appendTo(tooltipEle);\n                        updateBlazorTemplate(_this.treemap.element.id + 'Template', 'Template');\n                    }\n                    else {\n                        _this.removeTooltip();\n                        resetBlazorTemplate(_this.treemap.element.id + 'Template', 'Template');\n                    }\n                });\n            }\n        }\n        else {\n            this.removeTooltip();\n            resetBlazorTemplate(this.treemap.element.id + 'Template', 'Template');\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0].remove();\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","elementLength","templateHtml","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","remove","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","removeClassNames","elements","applyOptions","childNodes","classList","setAttribute","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","formatFunction","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","index","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","tooltipFillOpacity","tooltipTextOpacity","legendFontSize","labelFontFamily","beforePrint","itemRendering","drillStart","drillEnd","itemSelected","itemHighlight","tooltipRendering","itemClick","itemMove","click","doubleClick","rightClick","mouseMove","legendItemRendering","legendRendering","resize","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","border","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","LayoutPanel","processLayoutPanel","totalRect","levelsOfData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","renderData","txtVisible","getItemColor","eventArgs","_this","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","className","isLeafItem","_loop_1","this_1","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","themeStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","trigger","observedArgs","drawPath","renderItemText","renderTemplate","tabIndex","updateBlazorTemplate","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelData","option","equalColorValuePath","rangeColorValuePath","colorValuePath","palette","saturatedColor","rgbValue","templateElement","labelEle","templateSize","templateLocation","templateId","baseTemplateId","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Theme","mapsTitleFont","TreeMap","preRender","isBlazor","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","renderComplete","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","removeChild","firstChild","hasChildNodes","parentNode","resetBlazorTemplate","containerWidth","containerHeight","childElementCount","secondaryElement","legendGroup","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","hierarchyData","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","parseFloat","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","eventBlazorArgs","itemIndex","targetId","clickArgs","mouseEvent","clickBlazorArgs","preventDefault","doubleTapTimer1","end","Date","getMilliseconds","doubleClickArgs","doubleClickBlazorArgs","rightClickArgs","rightClickBlazorArgs","mouseDown","notify","moveArgs","moveBlazorArgs","drillMouseMove","cursor","calculateSelectedTextLevels","labelText","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","endBlazorEvent","targetEle","layoutID","templateID","drillLength","which","textContent","widthIncrement","heightIncrement","drilledLegendItems","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","selectionSettings","onPropertyChanged","newProp","oldProp","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","legendRtlLocation","shapeSize","isLineShape_1","strokeColor_1","strokeWidth_1","shapeId","imageUrl","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","strokeWidth","svgRect","rect_1","getAttribute","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","changeNextPage","isDestroyed","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","processHighlight","treeMapElement","orders","highlight","highLightElements","selectionModule","treeMapSelectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","length_4","targetEle_1","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","svgTooltip","Tooltip","header","content","shapes","areaBounds","appendTo"],"mappings":"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"}