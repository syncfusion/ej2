{"version":3,"file":"ej2-treemap.min.js","sources":["../../src/treemap/utils/helper.js","../../src/treemap/model/theme.js","../../src/treemap/model/constants.js","../../src/treemap/model/base.js","../../src/treemap/layout/render-panel.js","../../src/treemap/utils/export.js","../../src/treemap/treemap.js","../../src/treemap/layout/legend.js","../../src/treemap/user-interaction/highlight-selection.js","../../src/treemap/user-interaction/tooltip.js","../../src/global.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject;\n    htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n * @private\n */\n/* tslint:disable:no-string-literal */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var drillLevelText = void 0;\n        var spacing = 5;\n        drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 && !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    var elementLength = element.length;\n    while (elementLength > 0) {\n        childElement.appendChild(element[0]);\n        elementLength--;\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    document.getElementById(element.id).remove();\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * @private\n * To get the theme style based on treemap theme.\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n            color = '#303030';\n            break;\n        case 'fabricdark':\n            color = '#201F1F';\n            break;\n        case 'bootstrapdark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme.toLowerCase()) {\n        case 'bootstrapdark':\n        case 'fabricdark':\n        case 'materialdark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Specifies TreeMap load event name.\n * @private\n */\nexport var load = 'load';\n/**\n * Specifies TreeMap loaded event name.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Specifies TreeMap beforePrint event name.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Specifies the itemRendering event name.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Specifies the drilldown start event name.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Specifies the drilldown end event name.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Specifies the item selected event name.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Specifies the item highlight event name.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Specifies the tooltip rendering event name.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Specifies the item click event name.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Specifies the item move event name.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Specifies the mouse click event name.\n * @private\n */\nexport var click = 'click';\n/**\n * Specifies maps double click event name.\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Specifies maps right click event name.\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Specifies the mouse move event name.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Specifies legend item rendering event name.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Specifies legend rendering event name.\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Specifies treemap resize event name.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Specifies the font family\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the treemap margin.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To configure title of the maps.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Configures the legend settings.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Options for customizing the tree map levels.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (this.treemap.levelsOfData && this.treemap.levelsOfData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(this.treemap.levelsOfData[0], [])[0] : this.treemap.levelsOfData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                var x = this.treemap.drilledItems[count]['data'];\n                var y = new Object();\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || this.treemap.levelsOfData[0], totalRect);\n                this.renderLayoutItems(y || this.treemap.levelsOfData[0]);\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || this.treemap.levelsOfData[0], totalRect);\n                this.renderLayoutItems(data || this.treemap.levelsOfData[0]);\n            }\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        var parentItem = new Object();\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        var parentItemGroupname = new Object();\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems(parentItemGroupname);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var _this = this;\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        var connectorText;\n        var _loop_1 = function (i) {\n            item = this_1.renderItems[i];\n            index = item['groupIndex'];\n            if (this_1.treemap.drillDownView && isNullOrUndefined(this_1.treemap.currentLevel)\n                && index > 0 || this_1.treemap.drillDownView\n                && index > (this_1.treemap.currentLevel + 1)) {\n                return \"continue\";\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this_1.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this_1.treemap.totalRect ? convertToContainer(this_1.treemap.totalRect) : this_1.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this_1.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName = void 0;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this_1.treemap.currentLevel) {\n                if (this_1.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this_1.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this_1.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this_1.treemap) || levelName;\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this_1.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            textStyle.fontFamily = this_1.treemap.themeStyle.labelFontFamily || textStyle.fontFamily;\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this_1.treemap,\n                currentItem: item, RenderItems: this_1.renderItems, options: item['options']\n            };\n            this_1.treemap.trigger(itemRendering, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                        ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                    pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                    var path = _this.renderer.drawPath(pathOptions);\n                    itemGroup.appendChild(path);\n                    if (txtVisible) {\n                        _this.renderItemText(renderText.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                    }\n                    if (template) {\n                        templateEle = _this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item, isLeafItem);\n                        templateGroup.appendChild(templateEle);\n                    }\n                    itemGroup.setAttribute('aria-label', item['name']);\n                    itemGroup.setAttribute('tabindex', (_this.treemap.tabIndex + i + 2).toString());\n                    _this.layoutGroup.appendChild(itemGroup);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            _loop_1(i);\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n            updateBlazorTemplate(this.treemap.element.id + '_HeaderTemplate', 'HeaderTemplate', levels[levels.length - 1]);\n            updateBlazorTemplate(this.treemap.element.id + '_LabelTemplate', 'LabelTemplate', leaf);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(this.treemap.defaultLevelData)) {\n            if (this.treemap.defaultLevelData.length > 0) {\n                treemap.levelsOfData = this.treemap.defaultLevelData;\n            }\n        }\n        var parentData = findChildren(treemap.levelsOfData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : treemap.palette.length > 0 ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item, isLeafItem) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        var templateId = isLeafItem ? groupId + '_LabelTemplate' : groupId + '_HeaderTemplate';\n        var baseTemplateId = isLeafItem ? '_LabelTemplate' : '_HeaderTemplate';\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], null, null, this.treemap.element.id + baseTemplateId, false);\n        labelEle = convertElement(templateElement, templateId, item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the Maps\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData);\n        if (!argsData.cancel) {\n            printWindow(argsData.htmlContent, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax } from '@syncfusion/ej2-base';\nimport { Complex, Collection, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the TreeMap control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.defaultLevelData = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        var blazor = 'Blazor';\n        this.isBlazor = window[blazor];\n        this.trigger(load, { treemap: this });\n        this.initPrivateVariable();\n        this.unWireEVents();\n        this.createSvg();\n        this.wireEVents();\n        this.setCulture();\n    };\n    TreeMap.prototype.render = function () {\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(this.levelsOfData)) {\n            this.defaultLevelData = this.levelsOfData;\n        }\n        this.processDataManager();\n        this.renderComplete();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this.isBlazor ? null : this });\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        if (this.leafItemSettings.labelTemplate) {\n            resetBlazorTemplate(this.element.id + '_LabelTemplate', 'LabelTemplate');\n        }\n        for (var i = 0; i < this.levels.length; i++) {\n            if (this.levels[i].headerTemplate) {\n                resetBlazorTemplate(this.element.id + '_HeaderTemplate', 'HeaderTemplate');\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.remove();\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        title.textStyle.fontFamily = this.themeStyle.fontFamily || title.textStyle.fontFamily;\n        title.textStyle.size = this.themeStyle.fontSize || title.textStyle.size;\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            this.levelsOfData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                this.levelsOfData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    this.hierarchyData = [];\n                    this.hierarchyData = extend([], this.dataSource, this.hierarchyData, true);\n                    for (var i = 0; i < this.hierarchyData.length; i++) {\n                        this.processHierarchicalData(this.hierarchyData[i], i);\n                    }\n                    this.levelsOfData = this.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (this.levelsOfData.length > 1) {\n                        this.reOrderLevelData(this.levelsOfData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(this.levelsOfData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === this.hierarchyData.length - 1) {\n            var mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < this.hierarchyData.length; k++) {\n                childData = findChildren(this.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    this.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * Handles the print method for chart control.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            this.levelsOfData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        this.levelsOfData[this.levelsOfData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = this.levelsOfData[start][currentPath];\n        var previousData = this.levelsOfData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(this.levelsOfData[this.levelsOfData.length - 1][currentPath], 'Child');\n        this.levelsOfData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * To handle the window resize event on treemap.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this.isBlazor ? null : this\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args);\n                _this.render();\n            }, 500);\n        }\n    };\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var eventBlazorArgs;\n        var itemIndex;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        var clickBlazorArgs = { cancel: false, name: click, mouseEvent: e };\n        this.trigger(click, this.isBlazor ? clickBlazorArgs : clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name']\n            };\n            eventBlazorArgs = {\n                cancel: false, name: itemClick, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name']\n            };\n            this.trigger(itemClick, this.isBlazor ? eventBlazorArgs : eventArgs);\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        var doubleClickBlazorArgs = { cancel: false, name: doubleClick, mouseEvent: e };\n        this.trigger(doubleClick, this.isBlazor ? doubleClickBlazorArgs : doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        var rightClickBlazorArgs = { cancel: false, name: rightClick, mouseEvent: e };\n        this.trigger(rightClick, this.isBlazor ? rightClickBlazorArgs : rightClickArgs);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var eventBlazorArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        var moveBlazorArgs = { cancel: false, name: mouseMove, mouseEvent: e };\n        this.trigger(mouseMove, this.isBlazor ? moveBlazorArgs : moveArgs);\n        var childItems;\n        this.drillMouseMove = this.mouseDown;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            eventBlazorArgs = { cancel: false, name: itemMove, item: item, mouseEvent: e };\n            this.trigger(itemMove, this.isBlazor ? eventBlazorArgs : eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (labelText, drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        var drillLevelChild;\n        var newDrillItem = new Object();\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        var endBlazorEvent;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(labelText, drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this, item: newDrillItem, element: targetEle,\n                    groupIndex: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null\n                };\n                this.trigger(drillStart, startEvent, function (observedArgs) {\n                    _this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                        (!isNullOrUndefined(drillLevel) && _this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                    if (!observedArgs.cancel) {\n                        if (document.getElementById(layoutID)) {\n                            document.getElementById(layoutID).remove();\n                        }\n                        totalRect = extend({}, _this.areaRect, totalRect, true);\n                        if (_this.legendSettings.visible && !isNullOrUndefined(_this.treeMapLegendModule)) {\n                            if (!isNullOrUndefined(newDrillItem)) {\n                                _this.treeMapLegendModule.legendGroup.textContent = '';\n                                _this.treeMapLegendModule.legendGroup = null;\n                                _this.treeMapLegendModule.widthIncrement = 0;\n                                _this.treeMapLegendModule.heightIncrement = 0;\n                                if (_this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                    _this.drilledLegendItems = {\n                                        name: _this.drilledItems[_this.drilledItems.length - 1]['data']['levelOrderName'],\n                                        data: _this.drilledItems[_this.drilledItems.length - 1]['data']\n                                    };\n                                }\n                                else {\n                                    _this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                                }\n                                _this.treeMapLegendModule.renderLegend();\n                            }\n                            totalRect = !isNullOrUndefined(_this.totalRect) ? _this.totalRect : totalRect;\n                        }\n                        if (document.getElementById(templateID)) {\n                            document.getElementById(templateID).remove();\n                        }\n                        if (!isNullOrUndefined(observedArgs.childItems) && !observedArgs.cancel) {\n                            _this.layout.onDemandProcess(observedArgs.childItems);\n                        }\n                        else {\n                            _this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                            _this.layout.renderLayoutItems(newDrillItem);\n                        }\n                    }\n                });\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                endBlazorEvent = { cancel: false, name: drillEnd, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, this.isBlazor ? endBlazorEvent : endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                case 'layoutType':\n                case 'leafItemSettings':\n                case 'legendSettings':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Get component name\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * To destroy the treemap control.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n","import { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        var _this = this;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs;\n        eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        this.treemap.trigger(legendRendering, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel && observedArgs._changePosition !== _this.treemap.legendSettings.position) {\n                _this.treemap.legendSettings.position = observedArgs._changePosition;\n            }\n            _this.calculateLegendBounds();\n            if (_this.legendCollections.length > 0) {\n                _this.drawLegend();\n            }\n        });\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(treemap.levelsOfData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(this.treemap.levelsOfData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = treemap.themeStyle.fontFamily || titleTextStyle.fontFamily;\n            titleTextStyle.size = treemap.themeStyle.legendFontSize || titleTextStyle.size;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            legend.textStyle.size = treemap.themeStyle.legendFontSize || legend.textStyle.size;\n            legend.textStyle.fontFamily = treemap.themeStyle.fontFamily || legend.textStyle.fontFamily;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var _this = this;\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var legendRtlLocation;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape_1 = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor_1 = isLineShape_1 ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth_1 = isLineShape_1 ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            var _loop_1 = function (i) {\n                var collection = this_1.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this_1.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                this_1.treemap.trigger(legendItemRendering, eventArgs, function (observedArgs) {\n                    var renderOptions = new PathOption(shapeId, observedArgs.fill, strokeWidth_1, isLineShape_1 ? collection['Fill'] : strokeColor_1, legend.opacity, '');\n                    legendElement.appendChild(drawSymbol(shapeLocation, observedArgs.shape, shapeSize, observedArgs.imageUrl, renderOptions, legendText));\n                    textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                    renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || _this.treemap.themeStyle.legendTextColor, legendElement);\n                    _this.legendGroup.appendChild(legendElement);\n                });\n            };\n            var this_1 = this;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                _loop_1(i);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            document.getElementById(this.treemap.element.id + '_Interactive_Legend').remove();\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    /**\n     * Mouse down event in highlight\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var eventBlazorArgs;\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? selectionModule.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        eventBlazorArgs = { cancel: false, name: itemHighlight, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var eventBlazorArgs;\n        var treemap = this.treemap;\n        var items = [];\n        var targetId = targetEle.id;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements };\n                    eventBlazorArgs = { cancel: false, name: itemSelected, items: items, elements: selectionElements };\n                    treemap.trigger(itemSelected, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined, updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.fontFamily = this.treemap.themeStyle.fontFamily;\n                this.tooltipSettings.textStyle.color = this.treemap.themeStyle.tooltipFontColor\n                    || this.tooltipSettings.textStyle.color;\n                this.tooltipSettings.textStyle.opacity = this.treemap.themeStyle.tooltipTextOpacity\n                    || this.tooltipSettings.textStyle.opacity;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                this.treemap.trigger(tooltipRendering, tootipArgs, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        _this.svgTooltip = new Tooltip({\n                            enable: true,\n                            header: '',\n                            data: observedArgs.options['data'],\n                            template: observedArgs.options['template'],\n                            content: observedArgs.options['text'],\n                            shapes: [],\n                            location: observedArgs.options['location'],\n                            palette: [markerFill],\n                            areaBounds: _this.treemap.areaRect,\n                            textStyle: observedArgs.options['textStyle']\n                        });\n                        _this.svgTooltip.opacity = _this.treemap.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                        _this.svgTooltip.appendTo(tooltipEle);\n                        updateBlazorTemplate(_this.treemap.element.id + 'Template', 'Template');\n                    }\n                    else {\n                        _this.removeTooltip();\n                        resetBlazorTemplate(_this.treemap.element.id + 'Template', 'Template');\n                    }\n                });\n            }\n        }\n        else {\n            this.removeTooltip();\n            resetBlazorTemplate(this.treemap.element.id + 'Template', 'Template');\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0].remove();\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n","import * as index from './index';\nindex.TreeMap.Inject(index.TreeMapTooltip, index.TreeMapLegend, index.TreeMapHighlight, index.TreeMapSelection);\nexport * from './index';\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","elementLength","templateHtml","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","remove","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","removeClassNames","elements","applyOptions","childNodes","classList","setAttribute","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","index","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","tooltipFillOpacity","tooltipTextOpacity","legendFontSize","labelFontFamily","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","border","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","LayoutPanel","processLayoutPanel","totalRect","levelsOfData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","renderData","txtVisible","getItemColor","eventArgs","_this","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","className","isLeafItem","this_1","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","themeStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","trigger","observedArgs","drawPath","renderItemText","renderTemplate","tabIndex","updateBlazorTemplate","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelData","option","equalColorValuePath","rangeColorValuePath","colorValuePath","palette","saturatedColor","rgbValue","templateElement","labelEle","templateSize","templateLocation","templateId","baseTemplateId","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Theme","mapsTitleFont","TreeMap","preRender","isBlazor","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","renderComplete","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","removeChild","firstChild","hasChildNodes","parentNode","resetBlazorTemplate","containerWidth","containerHeight","childElementCount","secondaryElement","legendGroup","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","hierarchyData","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","parseFloat","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","eventBlazorArgs","itemIndex","targetId","clickArgs","mouseEvent","clickBlazorArgs","preventDefault","doubleTapTimer1","end","Date","getMilliseconds","doubleClick","doubleClickArgs","doubleClickBlazorArgs","rightClickArgs","rightClickBlazorArgs","mouseDown","notify","moveArgs","moveBlazorArgs","drillMouseMove","cursor","calculateSelectedTextLevels","labelText","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","endBlazorEvent","targetEle","layoutID","templateID","drillLength","rightClick","which","textContent","widthIncrement","heightIncrement","drilledLegendItems","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","selectionSettings","onPropertyChanged","newProp","oldProp","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","textOptions","legendRtlLocation","shapeSize","isLineShape_1","strokeColor_1","strokeWidth_1","shapeId","imageUrl","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","strokeWidth","svgRect","rect_1","getAttribute","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","changeNextPage","isDestroyed","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","mouseMove","processHighlight","treeMapElement","orders","highlight","highLightElements","selectionModule","treeMapSelectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","length_4","targetEle_1","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","svgTooltip","Tooltip","header","content","shapes","areaBounds","appendTo","index.TreeMap","Inject","index.TreeMapTooltip","index.TreeMapLegend","index.TreeMapHighlight","index.TreeMapSelection"],"mappings":"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"}