{"version":3,"file":"ej2-drawings.umd.min.js","sources":["../src/drawing/primitives/matrix.js","../src/drawing/utility/dom-util.js","../src/drawing/utility/base-util.js","../src/drawing/utility/path-util.js","../src/drawing/rendering/svg-renderer.js","../src/drawing/utility/diagram-util.js","../src/drawing/core/appearance.js","../src/drawing/enum/enum.js","../src/drawing/primitives/size.js","../src/drawing/primitives/rect.js","../src/drawing/core/elements/drawing-element.js","../src/drawing/core/containers/container.js","../src/drawing/core/elements/text-element.js","../src/drawing/core/containers/canvas.js","../src/drawing/core/elements/image-element.js","../src/drawing/core/elements/path-element.js","../src/drawing/primitives/point.js","../src/drawing/rendering/canvas-renderer.js","../src/drawing/rendering/renderer.js"],"sourcesContent":["/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { createElement, Browser } from '@syncfusion/ej2-base';\n/**\n * Defines the functionalities that need to access DOM\n */\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    var path = 'pathTable';\n    if (!window[path]) {\n        window[path] = {};\n    }\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        //let bounds: SVGRect = element.getBBox();\n        var bounds = void 0;\n        if (window[path][data]) {\n            bounds = window[path][data];\n        }\n        else {\n            window[path][data] = bounds = element.getBBox();\n        }\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity,\n        visible: element.visible, id: element.id,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId, index) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId + index + '_diagramAdornerLayer');\n    var elementcoll;\n    if (diagramElement) {\n        elementcoll = diagramElement.getElementsByClassName('e-adorner-layer' + index);\n        adornerLayerSvg = elementcoll[0];\n    }\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId, index) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId, index);\n    if (adornerSvg) {\n        adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    }\n    return adornerLayer;\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n","import { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getChildNode } from './dom-util';\nimport { Size } from '../primitives/size';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n","/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","import { Size } from './../primitives/size';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { processPathData, pathSegmentCollection } from '../utility/path-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            fill = style.fill;\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvg(id, width, height) {\n    var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n    return svgObj;\n}\nexport function getParentSvg(element, targetElement, canvas) {\n    if (element && element.id) {\n        if (targetElement && targetElement === 'selector') {\n            return this.pdfViewer.adornerSvgLayer;\n        }\n    }\n    return canvas;\n}\n","import { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { rotatePoint } from './base-util';\n/**\n * Implements the drawing functionalities\n */\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\n/** @private */\nexport function findElementUnderMouse(obj, position, padding) {\n    return findTargetElement(obj.wrapper, position, padding);\n}\n/** @private */\nexport function findTargetElement(container, position, padding) {\n    for (var i = container.children.length - 1; i >= 0; i--) {\n        var element = container.children[i];\n        if (element && element.bounds.containsPoint(position, 0)) {\n            if (element instanceof Container) {\n                var target = this.findTargetElement(element, position);\n                if (target) {\n                    return target;\n                }\n            }\n            if (element.bounds.containsPoint(position, 0)) {\n                return element;\n            }\n        }\n    }\n    if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n        return container;\n    }\n    return null;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            //    scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var RotateTransform;\n(function (RotateTransform) {\n    /** Self - Sets the transform type as Self */\n    RotateTransform[RotateTransform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    RotateTransform[RotateTransform[\"Parent\"] = 2] = \"Parent\";\n})(RotateTransform || (RotateTransform = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    // /**   @private  */\n    // public isEmpty(): boolean {\n    //     return this.height === 0 && this.width === 0;\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    Rect.prototype.intersection = function (rect) {\n        if (this.intersects(rect)) {\n            var left = Math.max(this.left, rect.left);\n            var top_1 = Math.max(this.top, rect.top);\n            var right = Math.min(this.right, rect.right);\n            var bottom = Math.min(this.bottom, rect.bottom);\n            return new Rect(left, top_1, right - left, bottom - top_1);\n        }\n        return Rect.empty;\n    };\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    // public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    // }\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    Rect.prototype.toPoints = function () {\n        var points = [];\n        points.push(this.topLeft);\n        points.push(this.topRight);\n        points.push(this.bottomLeft);\n        points.push(this.bottomRight);\n        return points;\n    };\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    Rect.prototype.scale = function (scaleX, scaleY) {\n        this.width *= scaleX;\n        this.height *= scaleY;\n    };\n    Rect.prototype.offset = function (offsetX, offsetY) {\n        this.x += offsetX;\n        this.y += offsetY;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","import { RotateTransform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DrawingElement = /** @class */ (function () {\n    function DrawingElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        this.rotateValue = { x: 0, y: 0, angle: 0 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        /** @private */\n        this.transform = RotateTransform.Self | RotateTransform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        /** @private */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DrawingElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DrawingElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DrawingElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DrawingElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DrawingElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DrawingElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DrawingElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DrawingElement;\n}());\nexport { DrawingElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DrawingElement } from '../elements/drawing-element';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DrawingElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 1,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.width || availableSize.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DrawingElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { RotateTransform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from '../../primitives/matrix';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y;\n            x = this.offsetX - desiredSize.width * this.pivot.x;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & RotateTransform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    if (child.rotateValue) {\n                        var rotateValue = {\n                            x: this.offsetX + (child.rotateValue.x || 0),\n                            y: this.offsetY + (child.rotateValue.y || 0)\n                        };\n                        var centerPoint = { x: this.offsetX, y: this.offsetY };\n                        var angle = child.rotateValue.angle | 0;\n                        var matrix = identityMatrix();\n                        rotateMatrix(matrix, angle, centerPoint.x, centerPoint.y);\n                        center = transformPointByMatrix(matrix, rotateValue);\n                    }\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if ((child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DrawingElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DrawingElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","import { Size } from './../primitives/size';\nimport { pathSegmentCollection, getRectanglePath, processPathData } from './../utility/path-util';\n// import { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        ctx.fillStyle = style.fill;\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    // if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    //     child.text = overFlow(child.text, options);\n                    // }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        ctx.globalAlpha = alignOptions.opacity;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    // text utility\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\nexport function refreshDiagramElements(canvas, drawingObjects, renderer) {\n    for (var i = 0; i < drawingObjects.length; i++) {\n        renderer.renderElement(drawingObjects[i], canvas, undefined);\n    }\n}\n","import { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getDiagramElement } from '../utility/dom-util';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { ImageElement } from '../core/elements/image-element';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DrawingRenderer = /** @class */ (function () {\n    function DrawingRenderer(name, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        // private svgRenderer: SvgRenderer;\n        /** @private */\n        this.isSvgMode = true;\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.isSvgMode = isSvgMode;\n        this.renderer = new CanvasRenderer();\n        //  this.svgRenderer = new SvgRenderer();\n    }\n    // /** @private */\n    // public setLayers(): void {\n    //     this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0] as SVGSVGElement;\n    // }\n    /**   @private  */\n    DrawingRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttrib                                                                           utes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.id;\n        if (!this.isSvgMode) {\n            options.x = options.x;\n            options.y = options.y;\n        }\n        this.renderer.drawPath(canvas, options);\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options);\n        this.renderer.drawText(canvas, options);\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        transform = { tx: 0, ty: 0, scale: 1 };\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = parentSvg;\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n            }\n        }\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.id;\n        this.renderer.drawRectangle(canvas, options);\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity,\n            visible: element.visible, id: element.id, gradient: element.style.gradient,\n        };\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    return DrawingRenderer;\n}());\nexport { DrawingRenderer };\n"],"names":["identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","x","y","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","rotateMatrix","angle","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","matrix1","matrix2","type2","assignMatrix","mat","getChildNode","node","child","collection","Browser","info","name","i","childNodes","length","nodeType","push","children","measurePath","data","path","window","measureElement","style","visibility","element","setAttribute","bounds","getBBox","svgBounds","Rect","width","height","wrapSvgText","text","textValue","txtValue","bounds1","k","content","whiteSpace","breakWord","bBoxText","dy","indexOf","replace","ceil","words","newText","existingWidth","existingText","j","wrap","eachLine","split","textWrapping","floor","wordWrapping","measureText","maxWidth","wrapBounds","Size","options","fill","stroke","strokeColor","rotateAngle","parentTransform","pivotX","pivot","pivotY","strokeWidth","dashArray","strokeDashArray","opacity","visible","id","actualSize","fontSize","fontFamily","textOverflow","textDecoration","doWrap","whiteSpaceToString","wordBreakToString","textAlign","textAlignToString","color","italic","bold","getTextOptions","txtWidth","min","max","wrapSvgTextAlign","getDiagramElement","elementId","contentId","document","getElementById","querySelector","createHtmlElement","elementType","attribute","createElement","setAttributeHtml","attributes","keys","Object","getAdornerLayerSvg","diagramId","index","adornerLayerSvg","diagramElement","getElementsByClassName","measureImage","source","contentSize","imageElement","getBoundingClientRect","cornersPointsBeforeRotation","ele","top","bottom","left","right","topLeft","topRight","bottomLeft","bottomRight","toBounds","rotateSize","size","minX","minY","maxX","maxY","getBounds","corners","middleLeft","topCenter","bottomCenter","middleRight","center","value","state","textContent","bBox","rotatePoint","getOffset","obj","desiredSize","processPathData","arrayCollection","parsePathData","ob","char","toLowerCase","command","x1","y1","x2","y2","r1","r2","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","point2","next","points","corner","pathSegmentCollection","x0","y0","segments","seg","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","setAttributeSvg","svg","createSvgElement","createElementNS","findTargetElement","container","position","padding","containsPoint","Container","target","this","intersect3","lineUtil1","lineUtil2","l1","l2","d","na","nb","enabled","intersectPt","ua","ub","getLineSegment","scaleElement","sw","sh","refObject","refPoint","_i","_a","newPosition","__extends","extendStatics","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","_super","apply","Property","ChildProperty","Stop","getClassName","Gradient","Collection","ShapeStyle","ComplexFactory","StrokeStyle","TextStyle","RotateTransform","ElementAction","ConnectorConstraints","ThumbsConstraints","SelectorConstraints","NoOfSegments","clone","MAX_VALUE","get","enumerable","configurable","equals","rect1","rect2","uniteRect","rect","NaN","unitePoint","intersection","intersects","top_1","empty","Inflate","containsRect","toPoints","points_1","scale","scaleX","scaleY","offset","MIN_VALUE","DrawingElement","rotateValue","isDirt","minHeight","minWidth","maxHeight","horizontalAlignment","verticalAlignment","margin","relativeMode","transform","Self","Parent","preventContainer","staticSize","isRectElement","isCalculateDesiredSize","elementActions","None","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","mode","getAbsolutePosition","set","measure","availableSize","validateDesiredSize","arrange","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","findChildOffsetFromCenter","childSize","TextElement","call","canMeasure","canConsiderBounds","textNodes","textWrapBounds","refreshTextElement","Canvas","leftMargin","topMargin","outerBounds","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","centerPoint","parentSize","ImageElement","imageSource","imageScale","imageAlign","stretch","PathElement","pathData","absolutePath","canMeasurePath","absoluteBounds","updatePath","newPathString","Point","point1","isEmptyPoint","PI","findLength","e","sqrt","pow","findAngle","atan2","distancePoints","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","direction","abs","CanvasRenderer","getContext","canvas","setStyle","ctx","strokeStyle","lineWidth","globalAlpha","parseDashArray","setLineDash","fillStyle","rotateContext","translate","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","save","beginPath","fillRect","closePath","restore","renderPath","length_1","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","isNaN","cpp","centp","a1","a","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","m","acos","getMeetOffset","arg","res","dest","getSliceOffset","src","image","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","alignment","xalign","substr","yalign","sWidth","sHeight","dWidth","dHeight","canvas1","toString","drawImage","srcRatio","destRatio","loadImage","Image","parentSvg","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","labelX","labelY","pointx","pointy","SvgRenderer","onlyRect","isSelector","ariaLabel","appendChild","attr","aria-label","class","setSvgStyle","updateSelectionRegion","gElement","parentNode","createGElement","drawCircle","enableSelector","circle","classval","cx","cy","radius","display","canApplyStyle","svgLabelAlign","wrapBound","pos","pointX","pointY","drawLine","line","startPoint","endPoint","stroke-width","random","shadowElement","removeChild","DrawingRenderer","isSvgMode","renderer","renderElement","htmlLayer","createParent","indexValue","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderRect","getBaseAttributes","imageWidth","imageHeight","sourceWidth","sourceHeight","contentWidth","contentHeight","widthRatio","heightRatio","ratio","group","tx","ty","gradient","transformedPoints","createScaling","svgObj","targetElement","pdfViewer","adornerSvgLayer","drawingObjects","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","wrapper","start1","end1","start2","end2","line3","tar","changedObject","textElement","mousePosition","w","h","cornerPoint","trans","translatedPts","adornerLayer","adornerSvg","usageCount","divElement","createTextNode","tSpan","setAttributeNS","body"],"mappings":"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"}